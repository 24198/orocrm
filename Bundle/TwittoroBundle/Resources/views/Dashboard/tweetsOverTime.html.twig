{% extends 'OroDashboardBundle:Dashboard:chartWidget.html.twig' %}

{% if not widgetTitle is defined %}
    {% if not widgetLabel is defined %}
        {% set widgetTitle = false %}
    {% else %}
        {% set widgetTitle = [ 'tfone.twittoro.tweets_over_time.title'|trans, items.hashtag  ] | join(' ') %}
    {% endif %}
{% endif %}

{% block content %}
    {% set hasData = false %}
    {% for tweet in items.data %}
        {% if tweet[1] and tweet[1] > 0 %}
            {% set hasData = true %}
        {% endif %}
    {% endfor %}

    {% if hasData %}    
        <div class="chart-container">
                    <div class="clearfix">
                        <div class="dashboard-selector-container pull-right">
                            <label for="time_selector">{{ 'Period'|trans }}:</label>
                            <select id="time_selector">
                                {% for name,label in timeFilters %}
                                    <option value="{{ name }}"{% if name == seletedTimeFilter %} selected="selected"{% endif %}>{{ label|trans }}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                    <script type="text/javascript">
                        require(['jquery', 'routing','oroui/js/widget-manager'],
                        function($, routing, widgetManager){
                            $(function () {
                                $('#time_selector').on('change', function (e) {
                                    var timeFilter = $(e.currentTarget).val();
                                    widgetManager.getWidgetInstance({{ widgetId|json_encode|raw }}, function(widget) {
                                        var url = routing.generate('tfone_twittoro_dashboard_tweets_over_time_chart', {widget: 'tweets_over_time', timeFilter: timeFilter}) + '?switch_period=true';
                                        widget.setUrl(url);
                                        widget.render();
                                    });
                                });
                            });
                        });
                    </script>
            <div class="clearfix">
                <div id="{{ widgetId }}-chart" class="bar-chart chart pull-left"></div>
            </div>
        </div>
        <script type="text/javascript">
            require(['jquery', 'flotr2'],
                function($, Flotr){
                    $(function () {
                        var $widgetContent = $('#{{ widgetContentId }}');
                        var $chart = $('#{{ widgetId }}-chart');
                        var setChartSize = function () {
                            var chartWidth = Math.round($widgetContent.width() * 0.9);
                            if (chartWidth != $chart.width()) {
                                $chart.width(chartWidth);
                                $chart.height(Math.min(Math.round(chartWidth * 0.4), 350));
                                return true;
                            }
                            return false;
                        };
                        var setChartContainerSize = function () {
                            $chart.closest('.clearfix').width($chart.width());
                        };
                        var drawChart = function () {
                            if (!$chart.get(0).clientWidth) {
                                return;
                            }
                            var xLabels = {{ items.labels|json_encode|raw }};
                            console.log(xLabels);
                            var colors = {{ chartColors|json_encode|raw }};
                            colors.push('#F5BC25');

                            var chart = {
                                data: {{ items.data|json_encode|raw }},
                                color: colors[10],
                                lines: {
                                    fill:true,
                                    show:true
                                },
                                points: {
                                    show: true
                                }
                            };
                            Flotr.draw(
                                $chart.get(0),
                                [chart],
                                {
                                    colors: {{ chartColors|json_encode|raw }},
                                    fontColor: {{ chartFontColor|json_encode|raw }},
                                    fontSize: {{ chartFontSize|json_encode|raw }},
                                    mouse : {
                                        track : true,
                                        relative : true,
                                        trackFormatter: function (data) {
                                            console.log('data');
                                            console.log(data);
                                            return xLabels[parseInt(data.x)] + ': ' + parseInt(data.y);
                                        }
                                    },
                                    yaxis: {
                                        noTicks: 4,
                                        min: 0,
                                        tickFormatter: function (y) {
                                            return parseInt(y);
                                        }
                                    },
                                    xaxis: {
                                        mode: 'time',
                                        timeMode:'UTC',
{#                                        min: xLabels[0],#}
                                        tickFormatter: function (x) {
                                            console.log(x);
                                            return xLabels[x];
                                        }
                                    },
                                    grid: {
                                        verticalLines : false
                                    }
                                }
                            );
                        };

                        $(function () {
                            setChartSize();
                            drawChart();
                            setChartContainerSize();
                        });

                        $(window).resize(function () {
                            if (setChartSize()) {
                                drawChart();
                                setChartContainerSize();
                            }
                        });
                    });
                });
        </script>
    {% else %}
        <div class="clearfix no-data">
            <span>{{ 'oro.dashboard.no_data_found'|trans }}</span>
        </div>
    {% endif %}
{% endblock %}
